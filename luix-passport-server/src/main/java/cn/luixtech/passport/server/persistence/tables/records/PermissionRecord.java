/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.records;


import cn.luixtech.passport.server.persistence.tables.Permission;

import java.time.Instant;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PermissionRecord extends UpdatableRecordImpl<PermissionRecord> implements Record8<String, String, String, String, Instant, String, Instant, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.permission.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.permission.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.permission.remark</code>.
     */
    public void setRemark(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.permission.remark</code>.
     */
    public String getRemark() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.permission.resource_type</code>.
     */
    public void setResourceType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.permission.resource_type</code>.
     */
    public String getResourceType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.permission.action</code>.
     */
    public void setAction(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.permission.action</code>.
     */
    public String getAction() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.permission.created_at</code>.
     */
    public void setCreatedAt(Instant value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.permission.created_at</code>.
     */
    public Instant getCreatedAt() {
        return (Instant) get(4);
    }

    /**
     * Setter for <code>public.permission.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.permission.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.permission.modified_at</code>.
     */
    public void setModifiedAt(Instant value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.permission.modified_at</code>.
     */
    public Instant getModifiedAt() {
        return (Instant) get(6);
    }

    /**
     * Setter for <code>public.permission.modified_by</code>.
     */
    public void setModifiedBy(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.permission.modified_by</code>.
     */
    public String getModifiedBy() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, String, String, Instant, String, Instant, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, String, String, String, Instant, String, Instant, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Permission.PERMISSION.ID;
    }

    @Override
    public Field<String> field2() {
        return Permission.PERMISSION.REMARK;
    }

    @Override
    public Field<String> field3() {
        return Permission.PERMISSION.RESOURCE_TYPE;
    }

    @Override
    public Field<String> field4() {
        return Permission.PERMISSION.ACTION;
    }

    @Override
    public Field<Instant> field5() {
        return Permission.PERMISSION.CREATED_AT;
    }

    @Override
    public Field<String> field6() {
        return Permission.PERMISSION.CREATED_BY;
    }

    @Override
    public Field<Instant> field7() {
        return Permission.PERMISSION.MODIFIED_AT;
    }

    @Override
    public Field<String> field8() {
        return Permission.PERMISSION.MODIFIED_BY;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRemark();
    }

    @Override
    public String component3() {
        return getResourceType();
    }

    @Override
    public String component4() {
        return getAction();
    }

    @Override
    public Instant component5() {
        return getCreatedAt();
    }

    @Override
    public String component6() {
        return getCreatedBy();
    }

    @Override
    public Instant component7() {
        return getModifiedAt();
    }

    @Override
    public String component8() {
        return getModifiedBy();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRemark();
    }

    @Override
    public String value3() {
        return getResourceType();
    }

    @Override
    public String value4() {
        return getAction();
    }

    @Override
    public Instant value5() {
        return getCreatedAt();
    }

    @Override
    public String value6() {
        return getCreatedBy();
    }

    @Override
    public Instant value7() {
        return getModifiedAt();
    }

    @Override
    public String value8() {
        return getModifiedBy();
    }

    @Override
    public PermissionRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public PermissionRecord value2(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public PermissionRecord value3(String value) {
        setResourceType(value);
        return this;
    }

    @Override
    public PermissionRecord value4(String value) {
        setAction(value);
        return this;
    }

    @Override
    public PermissionRecord value5(Instant value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PermissionRecord value6(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public PermissionRecord value7(Instant value) {
        setModifiedAt(value);
        return this;
    }

    @Override
    public PermissionRecord value8(String value) {
        setModifiedBy(value);
        return this;
    }

    @Override
    public PermissionRecord values(String value1, String value2, String value3, String value4, Instant value5, String value6, Instant value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PermissionRecord
     */
    public PermissionRecord() {
        super(Permission.PERMISSION);
    }

    /**
     * Create a detached, initialised PermissionRecord
     */
    public PermissionRecord(String id, String remark, String resourceType, String action, Instant createdAt, String createdBy, Instant modifiedAt, String modifiedBy) {
        super(Permission.PERMISSION);

        setId(id);
        setRemark(remark);
        setResourceType(resourceType);
        setAction(action);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setModifiedAt(modifiedAt);
        setModifiedBy(modifiedBy);
        resetChangedOnNotNull();
    }
}
