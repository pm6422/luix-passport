/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.records;


import cn.luixtech.passport.server.persistence.tables.SupportedDateTimeFormat;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SupportedDateTimeFormatRecord extends UpdatableRecordImpl<SupportedDateTimeFormatRecord> implements Record7<String, String, String, String, String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.supported_date_time_format.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.supported_date_time_format.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.supported_date_time_format.display_name</code>.
     */
    public void setDisplayName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.supported_date_time_format.display_name</code>.
     */
    public String getDisplayName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>public.supported_date_time_format.date_time_format</code>.
     */
    public void setDateTimeFormat(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>public.supported_date_time_format.date_time_format</code>.
     */
    public String getDateTimeFormat() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.supported_date_time_format.date_format</code>.
     */
    public void setDateFormat(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.supported_date_time_format.date_format</code>.
     */
    public String getDateFormat() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.supported_date_time_format.time_format</code>.
     */
    public void setTimeFormat(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.supported_date_time_format.time_format</code>.
     */
    public String getTimeFormat() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.supported_date_time_format.example</code>.
     */
    public void setExample(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.supported_date_time_format.example</code>.
     */
    public String getExample() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.supported_date_time_format.preset</code>.
     */
    public void setPreset(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.supported_date_time_format.preset</code>.
     */
    public Boolean getPreset() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, String, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, String, String, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return SupportedDateTimeFormat.SUPPORTED_DATE_TIME_FORMAT.ID;
    }

    @Override
    public Field<String> field2() {
        return SupportedDateTimeFormat.SUPPORTED_DATE_TIME_FORMAT.DISPLAY_NAME;
    }

    @Override
    public Field<String> field3() {
        return SupportedDateTimeFormat.SUPPORTED_DATE_TIME_FORMAT.DATE_TIME_FORMAT;
    }

    @Override
    public Field<String> field4() {
        return SupportedDateTimeFormat.SUPPORTED_DATE_TIME_FORMAT.DATE_FORMAT;
    }

    @Override
    public Field<String> field5() {
        return SupportedDateTimeFormat.SUPPORTED_DATE_TIME_FORMAT.TIME_FORMAT;
    }

    @Override
    public Field<String> field6() {
        return SupportedDateTimeFormat.SUPPORTED_DATE_TIME_FORMAT.EXAMPLE;
    }

    @Override
    public Field<Boolean> field7() {
        return SupportedDateTimeFormat.SUPPORTED_DATE_TIME_FORMAT.PRESET;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDisplayName();
    }

    @Override
    public String component3() {
        return getDateTimeFormat();
    }

    @Override
    public String component4() {
        return getDateFormat();
    }

    @Override
    public String component5() {
        return getTimeFormat();
    }

    @Override
    public String component6() {
        return getExample();
    }

    @Override
    public Boolean component7() {
        return getPreset();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDisplayName();
    }

    @Override
    public String value3() {
        return getDateTimeFormat();
    }

    @Override
    public String value4() {
        return getDateFormat();
    }

    @Override
    public String value5() {
        return getTimeFormat();
    }

    @Override
    public String value6() {
        return getExample();
    }

    @Override
    public Boolean value7() {
        return getPreset();
    }

    @Override
    public SupportedDateTimeFormatRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public SupportedDateTimeFormatRecord value2(String value) {
        setDisplayName(value);
        return this;
    }

    @Override
    public SupportedDateTimeFormatRecord value3(String value) {
        setDateTimeFormat(value);
        return this;
    }

    @Override
    public SupportedDateTimeFormatRecord value4(String value) {
        setDateFormat(value);
        return this;
    }

    @Override
    public SupportedDateTimeFormatRecord value5(String value) {
        setTimeFormat(value);
        return this;
    }

    @Override
    public SupportedDateTimeFormatRecord value6(String value) {
        setExample(value);
        return this;
    }

    @Override
    public SupportedDateTimeFormatRecord value7(Boolean value) {
        setPreset(value);
        return this;
    }

    @Override
    public SupportedDateTimeFormatRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SupportedDateTimeFormatRecord
     */
    public SupportedDateTimeFormatRecord() {
        super(SupportedDateTimeFormat.SUPPORTED_DATE_TIME_FORMAT);
    }

    /**
     * Create a detached, initialised SupportedDateTimeFormatRecord
     */
    public SupportedDateTimeFormatRecord(String id, String displayName, String dateTimeFormat, String dateFormat, String timeFormat, String example, Boolean preset) {
        super(SupportedDateTimeFormat.SUPPORTED_DATE_TIME_FORMAT);

        setId(id);
        setDisplayName(displayName);
        setDateTimeFormat(dateTimeFormat);
        setDateFormat(dateFormat);
        setTimeFormat(timeFormat);
        setExample(example);
        setPreset(preset);
        resetChangedOnNotNull();
    }
}
