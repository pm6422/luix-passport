/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.records;


import cn.luixtech.passport.server.persistence.tables.Role;

import java.time.Instant;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements Record4<String, String, Instant, Instant> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.role.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.role.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.role.description</code>.
     */
    public void setDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.role.description</code>.
     */
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.role.created_at</code>.
     */
    public void setCreatedAt(Instant value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.role.created_at</code>.
     */
    public Instant getCreatedAt() {
        return (Instant) get(2);
    }

    /**
     * Setter for <code>public.role.modified_at</code>.
     */
    public void setModifiedAt(Instant value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.role.modified_at</code>.
     */
    public Instant getModifiedAt() {
        return (Instant) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Instant, Instant> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, Instant, Instant> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Role.ROLE.ID;
    }

    @Override
    public Field<String> field2() {
        return Role.ROLE.DESCRIPTION;
    }

    @Override
    public Field<Instant> field3() {
        return Role.ROLE.CREATED_AT;
    }

    @Override
    public Field<Instant> field4() {
        return Role.ROLE.MODIFIED_AT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDescription();
    }

    @Override
    public Instant component3() {
        return getCreatedAt();
    }

    @Override
    public Instant component4() {
        return getModifiedAt();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDescription();
    }

    @Override
    public Instant value3() {
        return getCreatedAt();
    }

    @Override
    public Instant value4() {
        return getModifiedAt();
    }

    @Override
    public RoleRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public RoleRecord value2(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public RoleRecord value3(Instant value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public RoleRecord value4(Instant value) {
        setModifiedAt(value);
        return this;
    }

    @Override
    public RoleRecord values(String value1, String value2, Instant value3, Instant value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleRecord
     */
    public RoleRecord() {
        super(Role.ROLE);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(String id, String description, Instant createdAt, Instant modifiedAt) {
        super(Role.ROLE);

        setId(id);
        setDescription(description);
        setCreatedAt(createdAt);
        setModifiedAt(modifiedAt);
        resetChangedOnNotNull();
    }
}
